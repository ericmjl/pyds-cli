# https://setuptools.pypa.io/en/latest/userguide/quickstart.html
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
fail-under = 100
exclude = ["setup.py", "docs", "build", "examples"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 2
quiet = false
whitelist-regex = []
color = true

[tool.pytest.ini_options]
addopts = "-v --cov --cov-report term-missing"
testpaths = [
    "tests",
]

[tool.isort]
profile = "black"

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/ for a list of rules.
# See https://docs.astral.sh/ruff/configuration/#using-pyprojecttoml for configuration documentation
select = ["E", "F", "I"]

[tool.ruff.lint.per-file-ignores]


[tool.setuptools]
include-package-data = true

[tool.setuptools.packages]
find = {}  # Scanning implicit namespaces is active by default

[project]
name = "pyds-cli"
version = "0.6.2"
dependencies = [
    "typer >=0.3.8",
    "pyyaml >=6.0",
    "jinja2 >=3.0.2",
    "loguru >=0.5.3",
    "pyprojroot",
    "python-dotenv >=0.19.1",
    "rich >=10.12.0",
    "ruamel.yaml >=0.17.17",
    "case-converter >=1.0.2",
    "jinja2-strcase >= 0.0.2",
    "cookiecutter",
    "sh",
    "pre-commit",
]
readme = "README.md"
requires-python = ">=3.10"

[project.scripts]
pyds = "pyds.cli:app"

[tool.coverage.run]
omit = [
    "*/templates/*",
    "tests/*",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.feature.bare.pypi-dependencies]
pyds-cli = { path = ".", editable = true }

[tool.pixi.feature.core.pypi-dependencies]
pyds-cli = { path = ".", editable = true }
case-converter = "*"
jinja2-strcase = "*"

[tool.pixi.feature.core.dependencies]
typer = "*"
pyyaml = "*"
jinja2 = "*"
loguru = "*"
pyprojroot = "*"
python-dotenv = "*"
rich = "*"
"ruamel.yaml" = "*"
cookiecutter = "*"
sh = "*"

[tool.pixi.feature.testing.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.pixi.feature.testing.pypi-dependencies]
wonderwords = ">=2.2.0"

[tool.pixi.feature.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"
mknotebooks = "*"
mkdocstrings = { version = "*" }
mkdocstrings-python = "*"

[tool.pixi.feature.devtools.dependencies]
black = "*"
flake8 = "*"
interrogate = "*"
pre-commit = "*"
ruff = "*"
isort = "*"

[tool.pixi.feature.devtools.pypi-dependencies]
pre-commit = "*"
pydoclint = "*"
ipython = ">=8.26.0,<9"

[tool.pixi.feature.testing.tasks]
test = "pytest"

[tool.pixi.feature.devtools.tasks]
lint = "pre-commit run --all-files"
commit = "git commit"

[tool.pixi.feature.docs.tasks]
cli-docs = "typer pyds.cli utils docs --name pyds --output docs/cli.md"
build-docs = "mkdocs build"
serve-docs = "mkdocs serve"

[tool.pixi.feature.setup.tasks]
setup = "pre-commit install --install-hooks && pre-commit autoupdate"

[tool.pixi.environments]
default = ["core", "testing", "devtools", "setup"]
docs = ["core", "docs"]
testing = ["core", "testing", "setup"]
bare = ["bare"]
devtools = ["devtools"]
